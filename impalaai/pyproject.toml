[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "impalaai"
version = "0.1.0"
description = "A tool for managing Impala connections"
readme = "README.md"
authors = [
    {name = "Impala Team"}
]
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "boto3==1.39.11",
    "click==8.2.1",
    "passlib==1.7.4",
    "tabulate==0.9.0",
    "python-hcl2==7.3.1",
    "Jinja2==3.1.6",
    "python-dotenv==1.1.1",
    "PyYAML==6.0.2",
    "kubernetes==33.1.0",
    "impala-utils",
]

[project.optional-dependencies]
dev = [
    "pytest==8.4.1",
    "pytest-cov==6.2.1",
    "pytest-mock==3.14.1",
    "pytest-env==1.1.5",
    "autopep8==2.3.2",
    "moto==5.1.11",
    "openapi-spec-validator==0.7.2",
]

[project.scripts]
impala = "impala.cli.main:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.setuptools.package-data]
"impala" = [
    "jobs/k8s/*.yaml",
    "docker/**/*"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.autopep8]
max_line_length = 120
aggressive = 1
ignore = ["E226", "E302", "E41", "E501", "E203", "W503", "F401", "F403", "F405", "E402", "E731", "E741", "W291", "W292", "W293", "W391"]
recursive = true
in_place = true

[tool.flake8]
max-line-length = 120
ignore = ["E226", "E302", "E41", "E501", "E203", "W503", "F401", "F403", "F405", "E402", "E731", "E741", "W291", "W292", "W293", "W391"]
exclude = [".git", "__pycache__", "build", "dist", ".pytest_cache", "htmlcov", "tests"]

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
line_length = 120
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "INTERNAL", "FIRSTPARTY", "LOCALFOLDER"]
known_internal = ["impala_utils"]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
] 